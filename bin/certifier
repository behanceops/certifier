#!/usr/bin/env python

import sys, os

extra = os.path.dirname(os.path.dirname(sys.argv[0]))
sys.path.insert(0, extra)

import cement
from cement.core.foundation import CementApp
from cement.core import backend, foundation, controller, handler, hook, output

from certifier import add_args, aws_credentials
from certifier.elb import certify_elbs
from certifier.exception import *

from tabulate import tabulate

# define an application base controller
class CertifierBaseController(controller.CementBaseController):
    class Meta:
        label = 'base'
        description = "CLI for Certifier."

    @controller.expose(hide=True, aliases=['run'])
    def default(self):
        self.app.log.info('Inside base.default function. It doesn\'t do anything. Yet.')

    @controller.expose(help="Check ELB certs")
    def elb(self):
        self.app.log.info('Inside elb function.')

        try:

            creds = aws_credentials(self.app.pargs.credentials_file, self.app.pargs.profile)
            print certify_elbs(creds)

        except CertifierWarningException as e:
            print "CertifierWarningException"
            print e.host
            print e.message
            exit(1)

        except CertifierException as e:
            print "CertifierException"
            print e.host
            print e.message
            exit(1)

        except Exception as e:
            print e
            print type(e)
            exit(1)

class Certifier(foundation.CementApp):
    class Meta:
        label = 'certifier'
        base_controller = CertifierBaseController

# Create a custom output handler
class TabulateOutputHandler(cement.core.output.CementOutputHandler):
    class Meta:
        label = 'tabulateoutput'

    def render(self, data, template):
        print tabulate(data, headers='keys')

# create the app
# TODO: figure out a different way to configure the output handler
app = Certifier(output_handler=TabulateOutputHandler)

try:

    # Setup the application
    app.setup()

    add_args(app.args)

    # Run it!
    app.run()

finally:
    # close the application
    app.close()
